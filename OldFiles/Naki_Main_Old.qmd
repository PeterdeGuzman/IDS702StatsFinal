```{r}
# Load the packages
library(ggplot2)
library(broom)
library(dplyr)
library(car)
library(caret)
```

# Loading dataset

```{r}
# Set the file path
file_path <- "/Users/nakiyahdhariwala/StatsProject/39096-0001-Data.rda"

# Load the RDA file
load(file_path)

# List objects loaded into the environment
ls()

# Access the dataset (replace `da39096.0001` with the actual name found in `ls()`)
dataset <- da39096.0001  # Use the correct object name
```

```{r}
head(dataset)
ncol(dataset)
nrow(dataset)
```

The Collaborative Multi-Racial Post-Election Survey (CMPS), United States, 2020 is an extensive dataset designed to capture diverse perspectives across racial and ethnic groups in the United States. Respondents were asked to address a wide range of issues, including political attitudes, voting behavior, social concerns, and policy preferences.

The dataset contains 17,545 rows, with each row representing an individual respondent's data, and 1,490 columns, each capturing a specific variable or question response. These variables include demographic information, opinions on political and social issues, and responses to survey questions.

This particular analysis focused on a single topic within the larger dataset. Specifically, our research question is: **How do personal experiences with racism, in combination with demographic factors such as race, gender, and education, influence the importance respondents place on policies aimed at addressing racial and ethnic discrimination, controlling for other social and political factors?**

```{r}
# Calculate proportions
proportions <- prop.table(table(dataset$Q1R5))
proportions
# Define custom labels
custom_labels <- c("Not important", "Important")

# Combine custom labels with percentages
pie_labels <- paste(custom_labels, round(proportions * 100, 2), "%")

# Plot the pie chart with custom labels
pie(proportions,
    labels = pie_labels,
    main = "Q1R5: Stopping discrimination against racial/ethnic minorities",
    col = c("lightblue", "salmon"))

```

The outcome variable Q1R5 (Stopping discrimination against racial/ethnic minorities) for this Research Question is a binary variable which captures whether respondents view stopping racial and ethnic discrimination as an important issue (i.e., 1 = Important, 0 = Not Important). Therefore, we will make use Logistic regression as it is suitable for modeling binary outcome variables and allows for the inclusion of both predictor and control variables. While the distribution is skewed (74.25% say "No"), logistic regression is robust to imbalance in the outcome variable. However, extreme imbalance (e.g., 95%-5%) might require additional techniques like resampling or penalized logistic regression.

We can expect the analysis to reveal whether and to what extent experiences with racism predict the importance of racial/ethnic discrimination policy, controlling for demographic factors.

```{r}
# Define the required columns
required_cols <- c(
  # Outcome Variable: Stopping discrimination against racial/ethnic minorities (Binary: 0 = Not important, 1 = Important)
  "Q1R5", 

  # Demographic Variables
  "S2_RACE_PRIME",   # Primary Race
  "S3",              # How you think of yourself
  "S3B",             # Gender
  "S5_AGE",          # Age categories
  "S13",             # Highest level of education
  "S14",             # Community lived in

  # Variables capturing experiences with racism
  "Q629R1",          # Unfair treatment due to racial background/ethnicity
  "Q629R2",          # Unfair treatment due to skin color
  "Q629R3",          # Unfair treatment due to gender
  "Q629R4",          # Unfair treatment due to sexuality/orientation
  "Q629R5",          # Unfair treatment due to immigration status
  "Q629R6",          # Unfair treatment due to religion
  "Q629R7",          # Unfair treatment due to accent

  "Q627",            # Treated unfairly or discriminated against because of your race, ethnicity, gender, sexuality, being an immigrant, religious heritage or having an accent?
  "Q633",            # Discrimination impact on life satisfaction

  # Religion-related variables
  "Q58R1", "Q58R2", "Q58R3", "Q58R4", "Q58R5", "Q58R6", "Q58R7", 
  "Q58R8", "Q58R9", "Q58R10", "Q58R11", "Q58R12", "Q58R13", 
  "Q58R14", "Q58R15", # Various religious affiliations

  # Perceptions of discrimination
  "Q619_Q626R2",     # Perceptions of discrimination against Blacks
  "Q619_Q626R3",     # Perceptions of discrimination against Asian Americans
  "Q619_Q626R4",     # Perceptions of discrimination against Native Americans
  "Q619_Q626R5",     # Perceptions of discrimination against Immigrants
  "Q619_Q626R6"      # Perceptions of discrimination against Latinos
)

# Create a new dataframe with selected variables
dataset_new <- dataset[, required_cols]

# Recode the outcome variable 'Q1R5' for readability
dataset_new$Q1R5 <- ifelse(
  dataset_new$Q1R5 == "(0) NO TO: Stopping discrimination against racial/ethnic minorities", 
  "Not important",
  ifelse(dataset_new$Q1R5 == "(1) Stopping discrimination against racial/ethnic minorities", 
         "Important", 
         "Not specified")
)

# Convert all required columns to factors
dataset_new[required_cols] <- lapply(dataset_new[required_cols], as.factor)

# Verify the structure of the dataset
str(dataset_new[required_cols])

# Display the first few rows to check the changes
head(dataset_new)

```

We first consolidated multiple columns related to respondents' religious affiliations into a single, categorical variable called Religion. We also add another option called 'Multiple Religions' where respondents identified with more than one religion.

# Consolidating Religion into one column

```{r}
# Convert individual religion columns to numeric
for (i in 1:15) {
  col_name <- paste0("Q58R", i, "_numeric")
  dataset_new[[col_name]] <- as.numeric(sub("^\\((\\d+)\\).*", "\\1", dataset_new[[paste0("Q58R", i)]]))
}

# Create a new Religion variable
dataset_new$Religion <- "None"
dataset_new$Religion[dataset_new$Q58R1_numeric == 1] <- "Catholic"
dataset_new$Religion[dataset_new$Q58R2_numeric == 1] <- "Protestant"
dataset_new$Religion[dataset_new$Q58R3_numeric == 1] <- "Other Christian"
dataset_new$Religion[dataset_new$Q58R4_numeric == 1] <- "Jewish"
dataset_new$Religion[dataset_new$Q58R5_numeric == 1] <- "Muslim"
dataset_new$Religion[dataset_new$Q58R6_numeric == 1] <- "Hindu"
dataset_new$Religion[dataset_new$Q58R7_numeric == 1] <- "Buddhist"
dataset_new$Religion[dataset_new$Q58R8_numeric == 1] <- "Mormon/LDS"
dataset_new$Religion[dataset_new$Q58R9_numeric == 1] <- "Folk Religion"
dataset_new$Religion[dataset_new$Q58R10_numeric == 1] <- "Daoist"
dataset_new$Religion[dataset_new$Q58R11_numeric == 1] <- "Shamanism"
dataset_new$Religion[dataset_new$Q58R12_numeric == 1] <- "Ancestral Religion"
dataset_new$Religion[dataset_new$Q58R13_numeric == 1] <- "Spiritual but not religious"
dataset_new$Religion[dataset_new$Q58R14_numeric == 1] <- "Atheist"
dataset_new$Religion[dataset_new$Q58R15_numeric == 1] <- "Agnostic"

# Check if an individual reported multiple religious affiliations 
#dataset_new$multiple_religions <- rowSums(dataset_new[, grep("_numeric", names(dataset_new))] == 1)
#check <- table(dataset_new$multiple_religions)


# Handle multiple religious affiliations
dataset_new$Religion[rowSums(dataset_new[, grep("_numeric", names(dataset_new))] == 1) > 1] <- "Multiple Religions"

# Convert Religion to a factor
dataset_new$Religion <- factor(dataset_new$Religion,
                               levels = c("Catholic", "Protestant", "Other Christian", "Jewish", "Muslim",
                                          "Hindu", "Buddhist", "Mormon/LDS", "Folk Religion",
                                          "Daoist", "Shamanism", "Ancestral Religion",
                                          "Spiritual but not religious", "Atheist", "Agnostic", 
                                          "Multiple Religions", "None"))

# Create a table of counts for the new Religion variable
table(dataset_new$Religion)

# Remove redundant religion columns (Q58R1 to Q58R15 and their numeric versions)
redundant_cols <- c(
  "Q58R1", "Q58R2", "Q58R3", "Q58R4", "Q58R5", "Q58R6", "Q58R7", "Q58R8", 
  "Q58R9", "Q58R10", "Q58R11", "Q58R12", "Q58R13", "Q58R14", "Q58R15",
  "Q58R1_numeric", "Q58R2_numeric", "Q58R3_numeric", "Q58R4_numeric", 
  "Q58R5_numeric", "Q58R6_numeric", "Q58R7_numeric", "Q58R8_numeric", 
  "Q58R9_numeric", "Q58R10_numeric", "Q58R11_numeric", "Q58R12_numeric", 
  "Q58R13_numeric", "Q58R14_numeric", "Q58R15_numeric"
)

# Remove redundant columns from the dataset
dataset_clean <- dataset_new[, !(names(dataset_new) %in% redundant_cols)]

# Take a look at the updated dataset
head(dataset_clean)
```

# Checking for missing data

```{r}
# Check the number of missing values for each variable
missing_summary <- sapply(dataset_clean, function(x) sum(is.na(x)))

# Create a data frame to display the missing values clearly
missing_df <- data.frame(Variable = names(missing_summary), Missing_Count = missing_summary)
print(missing_df)

# Extract the variables Q629R1 to Q629R7
racism_vars <- dataset_clean[, grep("^Q629R[1-7]$", names(dataset_clean))]

# Calculate the proportion of missing values for each variable
missing_proportions <- colSums(is.na(racism_vars)) / nrow(racism_vars)

# Convert to a data frame for better readability
missing_summary <- data.frame(Variable = names(missing_proportions),
                              Missing_Proportion = round(missing_proportions, 4))

print(missing_summary)
```

Variables Q629R1 - Q629R7 each have 9,180 missing values, accounting for over 52% of their data. Due to this high proportion of missingness, we decided to remove these variables from the analysis.

This decision is justified as these variables ("Q629R1" to "Q629R7") capture detailed experiences with unfair treatment but overlap significantly with the broader variable Q627 ("Treated unfairly or discriminated against"), which remains in the analysis. By retaining Q627, we ensure that the overall essence of experiences with racism is preserved, albeit in a more general and complete form.

Removing these variables enhances data quality by addressing issues of excessive missingness, reduces the risk of bias, and strengthens the reliability and interpretability of the analysis.

```{r}
# Remove the variables Q629R1 to Q629R7
dataset_clean <- dataset_clean[, !(names(dataset_clean) %in% c("Q629R1", "Q629R2", 
                                                               "Q629R3", "Q629R4", 
                                                               "Q629R5", "Q629R6", "Q629R7"))]

head(dataset_clean)
#colnames(dataset_clean)
```

# Rename the remaining column headers for ease of understanding

```{r}
colnames(dataset_clean)
colnames(dataset_clean) <- c(
  "ImportanceOfStoppingDiscriminationAgainstMinorities",
  "PrimaryRace", 
  "Orientation", 
  "Gender", 
  "Age", 
  "HighestLevelOfEducation", 
  "CommunityLivedIn", 
  "TreatedUnfairlyOrDiscriminatedAgainst", 
  "DiscriminationImpactOnLifeSatisfaction", 
  "PerceptionsOfDiscriminationAgainstBlacks", 
  "PerceptionsOfDiscriminationAgainstAsianAmericans", 
  "PerceptionsOfDiscriminationAgainstNativeAmericans", 
  "PerceptionsOfDiscriminationAgainstImmigrants", 
  "PerceptionsOfDiscriminationAgainstLatinos", 
  "Religion"
)
colnames(dataset_clean)
```

# Look for exploratory plots in the other documents

```{r}
# Fit a logistic regression model
model <- glm(Q1R5 ~ S2_RACE_PRIME + # Primary Race
               S3 +                 # Orientation
               S3B +                # Gender
               S5_AGE +             # Age
               S13 +                # Highest level of education
               S14 +                # Community lived in
               Q627 +               # Treated unfairly or discriminated against
               Q633 +               # Discrimination impact on life satisfaction
               Q619_Q626R2 +        # Perceptions of discrimination against Blacks
               Q619_Q626R3 +        # Perceptions of discrimination against Asian Americans
               Q619_Q626R4 +        # Perceptions of discrimination against Native Americans
               Q619_Q626R5 +        # Perceptions of discrimination against Immigrants
               Q619_Q626R6 +        # Perceptions of discrimination against Latinos
               Religion +
               S3B * Q627,
             data = dataset_clean, family = binomial)

#summary(model)
```

```{r}
# Perform stepwise selection
stepwise_model <- step(model, direction = "both", trace = 1)
```

```{r}
# New model based on stepwise regression
model_final <- glm(Q1R5 ~ S2_RACE_PRIME + # Primary Race
#REMOVED               S3 +                 # Orientation
               S3B +                # Gender
               S5_AGE +             # Age
               S13 +                # Highest level of education
#REMOVED               S14 +                # Community lived in
               Q627 +               # Treated unfairly or discriminated against
               Q633 +               # Discrimination impact on life satisfaction
               Q619_Q626R2 +        # Perceptions of discrimination against Blacks
               Q619_Q626R3 +        # Perceptions of discrimination against Asian Americans
               Q619_Q626R4 +        # Perceptions of discrimination against Native Americans
               Q619_Q626R5,        # Perceptions of discrimination against Immigrants
#REMOVED               Q619_Q626R6 +        # Perceptions of discrimination against Latinos
#REMOVED               Religion +
#REMOVED              S2_RACE_PRIME * S3B, 
             
            data = dataset_clean, family = binomial)

summary(model_final)
```

# Diagnostic Checks

```{r}
# Calculate VIFs
vif_results <- vif(model)  # Uses type = "terms" automatically if predictors are weighted or non-linear
vif_results_model_final <- vif(model_final)

print(vif_results)
print(vif_results_model_final)
```

```{r}
plot(residuals(model, type = "deviance"))
plot(residuals(model_final, type = "deviance"))

influencePlot(model)
influencePlot(model_final)
```

```{r}
levels(as.factor(predictions))
levels(as.factor(dataset_clean$Q1R5))
```

```{r}
levels(as.factor(testData$Q1R5))
predictions <- predict(model_final, testData)

set.seed(123)  # For reproducibility
trainIndex <- createDataPartition(dataset_clean$Q1R5, p = 0.8, list = FALSE)
trainData <- dataset_clean[trainIndex, ]
testData <- dataset_clean[-trainIndex, ]



levels(as.factor(predictions))
levels(as.factor(testData$Q1R5))

confusionMatrix(predictions, testData$Q1R5)

```
