S14 == "(1) Large urban area" ~ "Urban/suburban",
S14 == "(2) Large suburb near large city" ~ "Urban/suburban",
S14 == "(3) Small suburb near small town or city" ~ "Urban/suburban",
S14 == "(4) Small town or small city" ~ "Urban/suburban",
S14 == "(5) Rural area" ~ "Rural"
),
# Race recoding
race_recoded = case_when(
S2_RACE_PRIME == "(1) White" ~ "White",
S2_RACE_PRIME == "(2) Hispanic or Latino" ~ "Latino",
S2_RACE_PRIME == "(3) Black or African American" ~ "Black",
S2_RACE_PRIME == "(4) Asian American" ~ "Asian American",
S2_RACE_PRIME == "(5) American Indian/Native American" ~ "AIAN",
S2_RACE_PRIME == "(6) Arab, Middle Eastern or North African" ~ "Arab/MENA",
S2_RACE_PRIME == "(7) Native Hawaiian" ~ "NHPI",
S2_RACE_PRIME == "(8) Not Hawaiian, but other Pacific Islander" ~ "NHPI"
),
# Age recoding
age_recoded = case_when(
S5_AGE == "(1) 16-17" ~ "16-17",
S5_AGE == "(2) 18-29" ~ "18-29",
S5_AGE == "(3) 30-39" ~ "30-39",
S5_AGE == "(4) 40-49" ~ "40-49",
S5_AGE == "(5) 50-59" ~ "50-59",
S5_AGE == "(6) 60-69" ~ "60-69",
S5_AGE == "(7) 70 +" ~ "70+"
)
) |>
mutate(
# Converting variables to factors
race_recoded = factor(race_recoded, levels = c("White", "Black", "Asian American", "Latino", "AIAN", "NHPI", "Arab/MENA")),
age_recoded = factor(age_recoded, levels = c("18-29", "30-39", "40-49", "50-59", "60-69", "70+")),
educ = factor(educ, levels = c("No college experience", "Some college experience", "College graduate")),
rural = factor(rural, levels = c("Rural", "Urban/suburban")),
sex_orientation = factor(sex_orientation, levels = c("Straight", "Queer", "Refused/Don't Know"))
)
# Remove all redundant columns
redundant_columns <- c("Q629R1", "Q629R2", "Q629R3", "Q629R4",
"Q629R5", "Q629R6", "Q629R7",
"S2_RACE_PRIME", "S13", "S3", "S5_AGE","S14", "Q29", "Q21")
dataset_clean <- dataset_clean_allvars[, !(names(dataset_clean_allvars) %in% redundant_columns)]
# Rename remaining columns in dataset_clean
colnames(dataset_clean) <- c(
"ImportanceOfStoppingDiscriminationAgainstMinorities",  # Q1R5
"RacialBelonging",                                      #Q271
"Gender",                                               # S3B
"TreatedUnfairlyOrDiscriminatedAgainst",                # Q627
"DiscriminationImpactOnLifeSatisfaction",              # Q633
"PerceptionsOfDiscriminationAgainstWhites",            # Q619_Q626R1
"PerceptionsOfDiscriminationAgainstBlacks",            # Q619_Q626R2
"PerceptionsOfDiscriminationAgainstAsianAmericans",    # Q619_Q626R3
"PerceptionsOfDiscriminationAgainstNativeAmericans",   # Q619_Q626R4
"PerceptionsOfDiscriminationAgainstImmigrants",        # Q619_Q626R5
"PerceptionsOfDiscriminationAgainstLatinos",           # Q619_Q626R6
"PerceptionsOfDiscriminationAgainstGaysAndLesbians",   # Q619_Q626R7
"PerceptionsOfDiscriminationAgainstMuslims",           # Q619_Q626R8
"Education",                                           # educ
"SexOrientation",                                      # sex_orientation
"Rural",                                               # rural
"Race",                                                # race_recoded
"Age"                                                  # age_recoded
)
# Regression model - RQ2
base_model <- glm(ImportanceOfStoppingDiscriminationAgainstMinorities ~ Gender +
TreatedUnfairlyOrDiscriminatedAgainst +
DiscriminationImpactOnLifeSatisfaction +
PerceptionsOfDiscriminationAgainstWhites +
PerceptionsOfDiscriminationAgainstBlacks +
PerceptionsOfDiscriminationAgainstAsianAmericans +
PerceptionsOfDiscriminationAgainstNativeAmericans +
PerceptionsOfDiscriminationAgainstImmigrants +
PerceptionsOfDiscriminationAgainstLatinos +
PerceptionsOfDiscriminationAgainstGaysAndLesbians +
PerceptionsOfDiscriminationAgainstMuslims +
Education +
SexOrientation +
Rural +
Race +
Age,
data = dataset_clean, family = "binomial")
# Regression Model with interaction term - RQ2
interaction_model <- glm(ImportanceOfStoppingDiscriminationAgainstMinorities ~
TreatedUnfairlyOrDiscriminatedAgainst +
DiscriminationImpactOnLifeSatisfaction +
PerceptionsOfDiscriminationAgainstWhites +
PerceptionsOfDiscriminationAgainstBlacks +
PerceptionsOfDiscriminationAgainstAsianAmericans +
PerceptionsOfDiscriminationAgainstNativeAmericans +
PerceptionsOfDiscriminationAgainstImmigrants +
PerceptionsOfDiscriminationAgainstLatinos +
PerceptionsOfDiscriminationAgainstGaysAndLesbians +
PerceptionsOfDiscriminationAgainstMuslims +
Education +
SexOrientation +
Rural +
Age +
Gender * Race,
data = dataset_clean, family = "binomial")
## Calculating Odds Ratio, Confidence Interval, and p-values (base model)
# Extract odds ratios
odds_ratios <- exp(coef(base_model))
# Get confidence intervals for coefficients
conf_intervals <- exp(confint(base_model))
# Extract p-values
p_values <- summary(base_model)$coefficients[, 4]
# Combine everything into a single data frame
results_base_model <- data.frame(
OddsRatio = odds_ratios,
LowerCI = conf_intervals[, 1],
UpperCI = conf_intervals[, 2],
PValue = p_values
)
# Display results
results_base_model
# creating the analysis table for RQ2
names <- c("Intercept",
"Gender: Women",
"Gender: Non-Binary",
"Gender: Something Else",
"Treated Unfairly Or Discriminated Against: No", # Yes
"Discrimination Impact On Life Satisfaction: Some", # A lot
"Discrimination Impact On Life Satisfaction: A Little",
"Discrimination Impact On Life Satisfaction: Not At All",
"Discrimination Impact On Life Satisfaction: Don't Know",
"Discrimination Impact On Life Satisfaction: Refused",
"Perceptions Of Discrimination Against Whites: Some", # A lot
"Perceptions Of Discrimination Against Whites: A Little",
"Perceptions Of Discrimination Against Whites: None At All",
"Perceptions Of Discrimination Against Whites: Don't Know",
"Perceptions Of Discrimination Against Blacks: Some", # A lot
"Perceptions Of Discrimination Against Blacks: A Little",
"Perceptions Of Discrimination Against Blacks: None At All",
"Perceptions Of Discrimination Against Blacks: Don't Know",
"Perceptions Of Discrimination Against Asian Americans: Some", # A lot
"Perceptions Of Discrimination Against Asian Americans: A Little",
"Perceptions Of Discrimination Against Asian Americans: None At All",
"Perceptions Of Discrimination Against Asian Americans: Don't Know",
"Perceptions Of Discrimination Against Native Americans: Some", # A lot
"Perceptions Of Discrimination Against Native Americans: A Little",
"Perceptions Of Discrimination Against Native Americans: None At All",
"Perceptions Of Discrimination Against Native Americans: Don't Know",
"Perceptions Of Discrimination Against Immigrants: Some", # A lot
"Perceptions Of Discrimination Against Immigrants: A Little",
"Perceptions Of Discrimination Against Immigrants: None At All",
"Perceptions Of Discrimination Against Immigrants: Don't Know",
"Perceptions Of Discrimination Against Latinos: Some", # A lot
"Perceptions Of Discrimination Against Latinos: A Little",
"Perceptions Of Discrimination Against Latinos: None At All",
"Perceptions Of Discrimination Against Latinos: Don't Know",
"Perceptions Of Discrimination Against Gays And Lesbians: Some", # A lot
"Perceptions Of Discrimination Against Gays And Lesbians: A Little",
"Perceptions Of Discrimination Against Gays And Lesbians: None At All",
"Perceptions Of Discrimination Against Gays And Lesbians: Don't Know",
"Perceptions Of Discrimination Against Muslims: Some",# A lot
"Perceptions Of Discrimination Against Muslims: A Little",
"Perceptions Of Discrimination Against Muslims: None At All",
"Perceptions Of Discrimination Against Muslims: Don't Know",
"Education: Some College Experience", # No College Experience
"Education: College Graduate",
"Orientation: Queer", #Straight
"Orientation: Refused",
"Community Type: Urban/Suburban", # Rural
"Race: Black", # White
"Race: Asian American",
"Race: Latino",
"Race: AIAN",
"Race: NHPI",
"Race: Arab/MENA",
"Age: 30-39 Years", # 18-29
"Age: 40-49 Years",
"Age: 50-59 Years",
"Age: 60-69 Years",
"Age: 70+ Years"
)
# Add row names as a new column
analysis_table <- cbind(RowName = names, results_base_model)
colnames(analysis_table) <- c("Description", "Odds Ratio", "Lower Confidence Interval",
"Upper Confidence Interval", "P-Value")
# View the updated dataframe
#head(analysis_table)
dataset_clean_allvars$Q271_reordered <- factor(dataset_clean_allvars$Q271,
levels = c("(5) Not at all important",
"(4) Slightly important",
"(3) Moderately important",
"(2) Very important",
"(1) Extremely important"))
dataset_clean_allvars$Q29_reordered <- factor(dataset_clean_allvars$Q29,
levels = c("(4) Not at all interested in politics",
"(3) Not that interested in politics",
"(2) Somewhat interested",
"(1) Very interested in politics"), ordered=TRUE)
ord_mod_interactions <- polr(Q29_reordered ~ Q271_reordered * S3B +
race_recoded +
age_recoded +
educ +  # Educational Attainment
Q21, # Party affiliation
data = dataset_clean_allvars, Hess=TRUE)
summary(ord_mod_interactions)
pvals_interact <- pnorm(-abs(summary(ord_mod_interactions)$coef[,"t value"]))*2
ctable_interact <- cbind(summary(ord_mod_interactions)$coef,pvals_interact)
ctable_interact
(exp_coefs_interact <- exp(cbind(OR=coef(ord_mod_interactions),confint(ord_mod_interactions))))
head(ord_mod_interactions$fitted.values)
head(predict(ord_mod_interactions))
confusionMatrix(predict(ord_mod_interactions), dataset_clean_allvars$Q29, mode="everything")
brant(ord_mod_interactions)
odds_ratio_plot_labelled <- function(model) {
# Get odds ratios and CIs
or_data <- exp(cbind(OR=coef(model), confint(model)))
# Calculate p-values
p_values <- pnorm(-abs(summary(model)$coefficients[,"t value"]))*2
# Keep only significant variables
sig_indices <- p_values[names(coef(model))] < 0.05
or_data_sig <- or_data[sig_indices, ]
# Create a mapping for variable names with grouping prefixes
rename_map <- c(
# Education Group
"educCollege graduate" = "Education: College Graduate",
"educSome college experience" = "Education: Some College",
# Gender Group
"S3B(2) Woman" = "Gender: Woman",
"S3B(3) Non-binary" = "Gender: Non-binary",
# Age Group
"age_recoded70+" = "Age: 70+",
"age_recoded60-69" = "Age: 60-69",
"age_recoded50-59" = "Age: 50-59",
# Race Group
"race_recodedBlack" = "Race: Black",
"race_recodedAsian American" = "Race: Asian",
"race_recodedLatino" = "Race: Latino",
"race_recodedAIAN" = "Race: Native",
"race_recodedNHPI" = "Race: NHPI",
# Racial Belonging Group
"Q271_reordered(2) Very important" = "Racial Belonging: Very Important",
"Q271_reordered(1) Extremely important" = "Racial Belonging: Extremely Important",
# Party ID Group
"Q21(2) Democrat" = "Party ID: Democrat",
"Q21(3) Independent" = "Party ID: Independent",
"Q21(4) Other party" = "Party ID: Other",
# Interactions
"Q271_reordered(1) Extremely important:S3B(2) Woman" = "Interaction: Racial Belonging & Gender: Woman"
)
# Create a data frame for plotting
plot_data <- data.frame(
name = rename_map[rownames(or_data_sig)],
or = or_data_sig[,1],
ci_lower = or_data_sig[,2],
ci_upper = or_data_sig[,3],
stringsAsFactors = FALSE
)
# Custom sorting function that sorts by the group name only
sort_by_group_and_name <- function(x) {
group_name <- sub("^\\d+\\. (.*): .*$", "\\1", x)
variable_name <- sub("^\\d+\\. .+: (.*)$", "\\1", x)
# Create a data frame to help with sorting
sort_df <- data.frame(
original = x,
group = group_name,
name = variable_name,
stringsAsFactors = FALSE
)
# Sort first by group, then by variable name
sort_df <- sort_df[order(sort_df$group, sort_df$name), ]
return(sort_df$original)
}
# Sort the data
plot_data$name <- factor(plot_data$name,
levels = rev(sort_by_group_and_name(plot_data$name)))
# Create plot
ggplot(plot_data, aes(y = name)) +
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +
geom_point(aes(x = or), size = 3, color = "blue") +
geom_errorbarh(aes(xmin = ci_lower, xmax = ci_upper), height = 0.3, color = "black") +
theme_minimal() +
theme(
axis.text.y = element_text(size = 6, color = "black"),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 9, face = "italic", hjust = 0.5),  # Center the caption
plot.margin = margin(1, 1, 1, 1, "cm"),
panel.grid.major.y = element_line(color = "gray90"),
panel.grid.minor.y = element_blank()
) +
labs(
title = "Odds Ratios (Significant Variables)",
x = "Odds Ratio",
y = "Variables",
caption = "Fig. 1.1: Odds ratio for variables with significant associations"
)
}
# Generate the plot
odds_ratio_plot_labelled(ord_mod_interactions)
# Filter for significant variables (p-value < 0.05)
significant_data <- analysis_table[analysis_table$`P-Value` < 0.05, ]
# Add a column for variable names to use in the plot (from the "Description" column)
significant_data <- significant_data |>
mutate(Variable = Description)
# Create the plot
ggplot(significant_data, aes(x = `Odds Ratio`, y = Variable)) +
geom_point(size = 2.5, color = "blue") +  # Add points for odds ratios
geom_errorbarh(aes(xmin = `Lower Confidence Interval`,
xmax = `Upper Confidence Interval`),
height = 0.3, color = "black") +  # Add horizontal error bars
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +  # Add a vertical reference line at Odds Ratio = 1
labs(
title = "Odds Ratios (Significant Variables)",
x = "Odds Ratio",
y = "Variable",
caption = "Fig. 2.1: Odds ratio for variables with significant associations"
) +
theme_minimal() +  # Minimal theme for clarity
theme(
axis.text.y = element_text(size = 6, color = "black", hjust = 1),  # Adjust y-axis text size and alignment
axis.title.x = element_text(size = 12),  # X-axis title
axis.title.y = element_text(size = 12),  # Y-axis title
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),  # Center title
plot.margin = margin(1, 1, 1, 1, "cm"),  # Adjust margins
plot.caption = element_text(size = 7, face = "italic", hjust = 0.5),  # Center caption
axis.text.x = element_text(size = 8)  # X-axis text size
) +
coord_cartesian(clip = "off")  # Ensure content stays within plot limits
# Save the plot
ggsave(
filename = "significant_odds_ratios.png",  # File name
plot = significant_plot,  # Plot object
path = "/Users/nakiyahdhariwala/IDS702Final/OriginalProposal/",  # Replace with the desired folder path
width = 12,  # Width of the plot in inches
height = 10,  # Height of the plot in inches
dpi = 300  # Resolution in dots per inch
)
# Filter for significant variables (p-value < 0.05)
significant_data <- analysis_table[analysis_table$`P-Value` < 0.05, ]
# Add a column for variable names to use in the plot (from the "Description" column)
significant_data <- significant_data |>
mutate(Variable = Description)
# Create the plot
sign_plot <- ggplot(significant_data, aes(x = `Odds Ratio`, y = Variable)) +
geom_point(size = 2.5, color = "blue") +  # Add points for odds ratios
geom_errorbarh(aes(xmin = `Lower Confidence Interval`,
xmax = `Upper Confidence Interval`),
height = 0.3, color = "black") +  # Add horizontal error bars
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +  # Add a vertical reference line at Odds Ratio = 1
labs(
title = "Odds Ratios (Significant Variables)",
x = "Odds Ratio",
y = "Variable",
caption = "Fig. 2.1: Odds ratio for variables with significant associations"
) +
theme_minimal() +  # Minimal theme for clarity
theme(
axis.text.y = element_text(size = 6, color = "black", hjust = 1),  # Adjust y-axis text size and alignment
axis.title.x = element_text(size = 12),  # X-axis title
axis.title.y = element_text(size = 12),  # Y-axis title
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),  # Center title
plot.margin = margin(1, 1, 1, 1, "cm"),  # Adjust margins
plot.caption = element_text(size = 7, face = "italic", hjust = 0.5),  # Center caption
axis.text.x = element_text(size = 8)  # X-axis text size
) +
coord_cartesian(clip = "off")  # Ensure content stays within plot limits
# Save the plot
ggsave(
filename = "significant_odds_ratios.png",  # File name
plot = sign_plot,  # Plot object
path = "/Users/nakiyahdhariwala/IDS702Final/OriginalProposal/",  # Replace with the desired folder path
width = 12,  # Width of the plot in inches
height = 10,  # Height of the plot in inches
dpi = 300  # Resolution in dots per inch
)
# Filter for significant variables (p-value < 0.05)
significant_data <- analysis_table[analysis_table$`P-Value` < 0.05, ]
# Add a column for variable names to use in the plot (from the "Description" column)
significant_data <- significant_data |>
mutate(Variable = Description)
# Create the plot
sign_plot <- ggplot(significant_data, aes(x = `Odds Ratio`, y = Variable)) +
geom_point(size = 2.5, color = "blue") +  # Add points for odds ratios
geom_errorbarh(aes(xmin = `Lower Confidence Interval`,
xmax = `Upper Confidence Interval`),
height = 0.3, color = "black") +  # Add horizontal error bars
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +  # Add a vertical reference line at Odds Ratio = 1
labs(
title = "Odds Ratios (Significant Variables)",
x = "Odds Ratio",
y = "Variable",
caption = "Fig. 2.1: Odds ratio for variables with significant associations"
) +
theme_minimal() +  # Minimal theme for clarity
theme(
axis.text.y = element_text(size = 6, color = "black", hjust = 1),  # Adjust y-axis text size and alignment
axis.title.x = element_text(size = 12),  # X-axis title
axis.title.y = element_text(size = 12),  # Y-axis title
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),  # Center title
plot.margin = margin(1, 1, 1, 1, "cm"),  # Adjust margins
plot.caption = element_text(size = 7, face = "italic", hjust = 0.5),  # Center caption
axis.text.x = element_text(size = 8)  # X-axis text size
) +
coord_cartesian(clip = "off")  # Ensure content stays within plot limits
# Save the plot
ggsave(
filename = "significant_odds_ratios.png",  # File name
plot = sign_plot,  # Plot object
path = "/Users/nakiyahdhariwala/IDS702Final/OriginalProposal/",  # Replace with the desired folder path
width = 12,  # Width of the plot in inches
height = 10  # Resolution in dots per inch
)
# Filter for significant variables (p-value < 0.05)
significant_data <- analysis_table[analysis_table$`P-Value` < 0.05, ]
# Add a column for variable names to use in the plot (from the "Description" column)
significant_data <- significant_data |>
mutate(Variable = Description)
# Create the plot
sign_plot <- ggplot(significant_data, aes(x = `Odds Ratio`, y = Variable)) +
geom_point(size = 2.5, color = "blue") +  # Add points for odds ratios
geom_errorbarh(aes(xmin = `Lower Confidence Interval`,
xmax = `Upper Confidence Interval`),
height = 0.3, color = "black") +  # Add horizontal error bars
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +  # Add a vertical reference line at Odds Ratio = 1
labs(
title = "Odds Ratios (Significant Variables)",
x = "Odds Ratio",
y = "Variable",
caption = "Fig. 2.1: Odds ratio for variables with significant associations"
) +
theme_minimal() +  # Minimal theme for clarity
theme(
axis.text.y = element_text(size = 6, color = "black", hjust = 1),  # Adjust y-axis text size and alignment
axis.title.x = element_text(size = 12),  # X-axis title
axis.title.y = element_text(size = 12),  # Y-axis title
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),  # Center title
plot.margin = margin(1, 1, 1, 1, "cm"),  # Adjust margins
plot.caption = element_text(size = 7, face = "italic", hjust = 0.5),  # Center caption
axis.text.x = element_text(size = 8)  # X-axis text size
) +
coord_cartesian(clip = "off")  # Ensure content stays within plot limits
# Save the plot
ggsave(
filename = "significant_odds_ratios.png",  # File name
plot = sign_plot,  # Plot object
path = "/Users/nakiyahdhariwala/IDS702Final/OriginalProposal/",  # Replace with the desired folder path
width = 12,  # Width of the plot in inches
height = 10  # Resolution in dots per inch
)
# Filter for significant variables (p-value < 0.05)
significant_data <- analysis_table[analysis_table$`P-Value` < 0.05, ]
# Add a column for variable names to use in the plot (from the "Description" column)
significant_data <- significant_data |>
mutate(Variable = Description)
# Create the plot
sign_plot <- ggplot(significant_data, aes(x = `Odds Ratio`, y = Variable)) +
geom_point(size = 2.5, color = "blue") +  # Add points for odds ratios
geom_errorbarh(aes(xmin = `Lower Confidence Interval`,
xmax = `Upper Confidence Interval`),
height = 0.3, color = "black") +  # Add horizontal error bars
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +  # Add a vertical reference line at Odds Ratio = 1
labs(
title = "Odds Ratios (Significant Variables)",
x = "Odds Ratio",
y = "Variable",
caption = "Fig. 2.1: Odds ratio for variables with significant associations"
) +
theme_minimal() +  # Minimal theme for clarity
theme(
axis.text.y = element_text(size = 6, color = "black", hjust = 1),  # Adjust y-axis text size and alignment
axis.title.x = element_text(size = 12),  # X-axis title
axis.title.y = element_text(size = 12),  # Y-axis title
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),  # Center title
plot.margin = margin(1, 1, 1, 1, "cm"),  # Adjust margins
plot.caption = element_text(size = 7, face = "italic", hjust = 0.5),  # Center caption
axis.text.x = element_text(size = 8)  # X-axis text size
) +
coord_cartesian(clip = "off")  # Ensure content stays within plot limits
# Save the plot
ggsave(
filename = "significant_odds_ratios.png",  # File name
plot = sign_plot,  # Plot object
path = "/Users/nakiyahdhariwala/IDS702Final/OriginalProposal/",  # Replace with the desired folder path
width = 12,  # Width of the plot in inches
height = 10  # Resolution in dots per inch
)
sign_plot
# Filter for significant variables (p-value < 0.05)
significant_data <- analysis_table[analysis_table$`P-Value` < 0.05, ]
# Add a column for variable names to use in the plot (from the "Description" column)
significant_data <- significant_data |>
mutate(Variable = Description)
# Create the plot
sign_plot <- ggplot(significant_data, aes(x = `Odds Ratio`, y = Variable)) +
geom_point(size = 2.5, color = "blue") +  # Add points for odds ratios
geom_errorbarh(aes(xmin = `Lower Confidence Interval`,
xmax = `Upper Confidence Interval`),
height = 0.3, color = "black") +  # Add horizontal error bars
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +  # Add a vertical reference line at Odds Ratio = 1
labs(
title = "Odds Ratios (Significant Variables)",
x = "Odds Ratio",
y = "Variable",
caption = "Fig. 2.1: Odds ratio for variables with significant associations"
) +
theme_minimal() +  # Minimal theme for clarity
theme(
axis.text.y = element_text(size = 10, color = "black", hjust = 1),  # Adjust y-axis text size and alignment
axis.title.x = element_text(size = 12),  # X-axis title
axis.title.y = element_text(size = 12),  # Y-axis title
plot.title = element_text(size = 12, face = "bold", hjust = 0.5),  # Center title
plot.margin = margin(1, 1, 1, 1, "cm"),  # Adjust margins
plot.caption = element_text(size = 7, face = "italic", hjust = 0.5),  # Center caption
axis.text.x = element_text(size = 8)  # X-axis text size
) +
coord_cartesian(clip = "off")  # Ensure content stays within plot limits
sign_plot
