---
title: "Naki_MainPlots"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this: The `echo: false` option disables the printing of code (only output is displayed).

```{r}
1 + 1
library(ggplot2)
library(dplyr)
library(tidyr)
```

```{r}
file_path <- "39096-0001-Data.rda"

load(file_path)          # Load the RDA file
ls()                     # List objects loaded into the environment
dataset <- da39096.0001  # Access the dataset

head(dataset)
ncol(dataset)
nrow(dataset)
```

```{r}
# Calculate proportions
proportions <- prop.table(table(dataset$Q1R5))
proportions
# Define custom labels
custom_labels <- c("Not important", "Important")

# Combine custom labels with percentages
pie_labels <- paste(custom_labels, round(proportions * 100, 2), "%")

# Plot the pie chart with custom labels
pie(proportions,
    labels = pie_labels,
    main = "Q1R5: Stopping discrimination against racial/ethnic minorities",
    col = c("lightblue", "salmon"))
```

## Cleaning and factoring all columns in the df

```{r}
# Define the required columns
required_cols <- c(
  # Outcome Variable: Stopping discrimination against racial/ethnic minorities (Binary: 0 = Not important, 1 = Important)
  "Q1R5", 

  # Demographic Variables
  "S2_RACE_PRIME",   # Primary Race
  "S3",              # SexualOrientation
  "S3B",             # Gender
  "S5_AGE",          # Age categories
  "S13",             # Highest level of education
  "S14",             # Community lived in

  # Variables capturing experiences with racism
  "Q629R1",          # Unfair treatment due to racial background/ethnicity
  "Q629R2",          # Unfair treatment due to skin color
  "Q629R3",          # Unfair treatment due to gender
  "Q629R4",          # Unfair treatment due to sexuality/orientation
  "Q629R5",          # Unfair treatment due to immigration status
  "Q629R6",          # Unfair treatment due to religion
  "Q629R7",          # Unfair treatment due to accent

  "Q627",            # Treated unfairly or discriminated against because of your race, ethnicity, gender, sexuality, being an immigrant, religious heritage or having an accent?
  "Q633",            # Discrimination impact on life satisfaction

  # Religion-related variables
  "Q58R1", "Q58R2", "Q58R3", "Q58R4", "Q58R5", "Q58R6", "Q58R7", 
  "Q58R8", "Q58R9", "Q58R10", "Q58R11", "Q58R12", "Q58R13", 
  "Q58R14", "Q58R15", # Various religious affiliations

  # Perceptions of discrimination
  "Q619_Q626R1",     # Perceptions of discrimination against Whites
  "Q619_Q626R2",     # Perceptions of discrimination against Blacks
  "Q619_Q626R3",     # Perceptions of discrimination against Asian Americans
  "Q619_Q626R4",     # Perceptions of discrimination against Native Americans
  "Q619_Q626R5",     # Perceptions of discrimination against Immigrants
  "Q619_Q626R6",     # Perceptions of discrimination against Latinos
  "Q619_Q626R7",     # Perceptions of discrimination against GaysAndLesbians
  "Q619_Q626R8"      # Perceptions of discrimination against Muslims
)

# Create a new dataframe with selected variables
dataset_new <- dataset[, required_cols]

# Recode the outcome variable 'Q1R5' for readability
dataset_new$Q1R5 <- ifelse(
  dataset_new$Q1R5 == "(0) NO TO: Stopping discrimination against racial/ethnic minorities", 
  "Not important",
  ifelse(dataset_new$Q1R5 == "(1) Stopping discrimination against racial/ethnic minorities", 
         "Important", 
         "Not specified")
)

# Define the columns for perceptions of discrimination
perception_cols <- c(
  "Q619_Q626R1",  # Perceptions of discrimination against Whites
  "Q619_Q626R2",  # Perceptions of discrimination against Blacks
  "Q619_Q626R3",  # Perceptions of discrimination against Asian Americans
  "Q619_Q626R4",  # Perceptions of discrimination against Native Americans
  "Q619_Q626R5",  # Perceptions of discrimination against Immigrants
  "Q619_Q626R6",  # Perceptions of discrimination against Latinos
  "Q619_Q626R7",  # Perceptions of discrimination against GaysAndLesbians
  "Q619_Q626R8",  # Perceptions of discrimination against Muslims
  
  "Q633"          # Discrimination impact on life satisfaction
)

# Recode 'Don' as 'Don't know' in the specified columns
dataset_new[perception_cols] <- lapply(dataset_new[perception_cols], function(x) {
  x <- ifelse(x == "Don", "Don't know", x)
  return(x)
})

# Verify the changes
head(dataset_new[perception_cols])

# Convert all required columns to factors
dataset_new[required_cols] <- lapply(dataset_new[required_cols], as.factor)

# Verify the structure of the dataset
str(dataset_new[required_cols])

# Display the first few rows to check the changes
head(dataset_new)
```

This code prepares the dataset for further analysis by selecting and cleaning up the relevant variables, ensuring they are in a suitable format (i.e., factors for categorical data).

**Q633 & Q619_Q626R1 - Q619_Q626R8 Category Key**

-   1 - A lot

-   2 - Some

-   3 - A little

-   4 - None at all

-   5 - Don't Know

## Changing Factor Key

```{r}
# Define the mapping from numeric values to the desired labels
perception_labels <- c("A lot", "Some", "A little", "None at all", "Don't know")

# Convert the factored perception columns to the correct labels
dataset_new[perception_cols] <- lapply(dataset_new[perception_cols], function(x) {
  # Convert the numeric factors (1:5) to the corresponding perception labels
  x <- factor(x, levels = 1:5, labels = perception_labels)
  return(x)
})

# Verify the changes
head(dataset_new[perception_cols])

# Check the structure
str(dataset_new[perception_cols])

```

## Consolidating Religion into one column

```{r}
# Convert individual religion columns to numeric
for (i in 1:15) {
  col_name <- paste0("Q58R", i, "_numeric")
  dataset_new[[col_name]] <- as.numeric(sub("^\\((\\d+)\\).*", "\\1", dataset_new[[paste0("Q58R", i)]]))
}

# Create a new Religion variable
dataset_new$Religion <- "None"

# Assign religion based on the numeric values of each Q58R column
religion_mapping <- c(
  "Q58R1_numeric" = "Catholic", 
  "Q58R2_numeric" = "Protestant", 
  "Q58R3_numeric" = "Other Christian",
  "Q58R4_numeric" = "Jewish", 
  "Q58R5_numeric" = "Muslim", 
  "Q58R6_numeric" = "Hindu", 
  "Q58R7_numeric" = "Buddhist", 
  "Q58R8_numeric" = "Mormon/LDS", 
  "Q58R9_numeric" = "Folk Religion", 
  "Q58R10_numeric" = "Daoist", 
  "Q58R11_numeric" = "Shamanism", 
  "Q58R12_numeric" = "Ancestral Religion", 
  "Q58R13_numeric" = "Spiritual but not religious", 
  "Q58R14_numeric" = "Atheist", 
  "Q58R15_numeric" = "Agnostic"
)

# Loop through the mapping to assign values
for (col in names(religion_mapping)) {
  dataset_new$Religion[dataset_new[[col]] == 1] <- religion_mapping[[col]]
}

# Handle multiple religious affiliations
dataset_new$Religion[rowSums(dataset_new[, grep("_numeric", names(dataset_new))] == 1) > 1] <- "Multiple Religions"

# Convert Religion to a factor with specific levels
dataset_new$Religion <- factor(dataset_new$Religion,
                               levels = c("Catholic", "Protestant", "Other Christian", "Jewish", "Muslim",
                                          "Hindu", "Buddhist", "Mormon/LDS", "Folk Religion",
                                          "Daoist", "Shamanism", "Ancestral Religion",
                                          "Spiritual but not religious", "Atheist", "Agnostic", 
                                          "Multiple Religions", "None"))

# Create a table of counts for the new Religion variable
table(dataset_new$Religion)

# Remove redundant religion columns (Q58R1 to Q58R15 and their numeric versions)
redundant_cols <- c(
  paste0("Q58R", 1:15), paste0("Q58R", 1:15, "_numeric")
)

# Remove redundant columns from the dataset
dataset_clean <- dataset_new[, !(names(dataset_new) %in% redundant_cols)]

# Take a look at the updated dataset
head(dataset_clean)

```

# Checking for missing data

```{r}
# Check the number of missing values for each variable
missing_summary <- sapply(dataset_clean, function(x) sum(is.na(x)))

# Create a data frame to display the missing values clearly
missing_df <- data.frame(Variable = names(missing_summary), Missing_Count = missing_summary)
print(missing_df)

# Extract the variables Q629R1 to Q629R7
racism_vars <- dataset_clean[, grep("^Q629R[1-7]$", names(dataset_clean))]

# Calculate the proportion of missing values for each variable
missing_proportions <- colSums(is.na(racism_vars)) / nrow(racism_vars)

# Convert to a data frame
missing_summary <- data.frame(Variable = names(missing_proportions),
                              Missing_Proportion = round(missing_proportions, 4))

print(missing_summary)
```

```{r}
# Remove the variables Q629R1 to Q629R7
dataset_clean <- dataset_clean[, !(names(dataset_clean) %in% c("Q629R1", "Q629R2", 
                                                               "Q629R3", "Q629R4", 
                                                               "Q629R5", "Q629R6", "Q629R7"))]

head(dataset_clean)
```

## Rename the remaining column headers for ease of understanding

```{r}
colnames(dataset_clean)
colnames(dataset_clean) <- c(
  "ImportanceOfStoppingDiscriminationAgainstMinorities",
  "PrimaryRace", 
  "Orientation", 
  "Gender", 
  "Age", 
  "HighestLevelOfEducation", 
  "CommunityLivedIn", 
  "TreatedUnfairlyOrDiscriminatedAgainst", 
  "DiscriminationImpactOnLifeSatisfaction",
  "PerceptionsOfDiscriminationAgainstWhites",
  "PerceptionsOfDiscriminationAgainstBlacks", 
  "PerceptionsOfDiscriminationAgainstAsianAmericans", 
  "PerceptionsOfDiscriminationAgainstNativeAmericans", 
  "PerceptionsOfDiscriminationAgainstImmigrants", 
  "PerceptionsOfDiscriminationAgainstLatinos", 
  "PerceptionsOfDiscriminationAgainstGaysAndLesbians",
  "PerceptionsOfDiscriminationAgainstMuslims",
  "Religion"
)
colnames(dataset_clean)
```

# Exploratory Plots Analysis

```{r}
# Load necessary libraries
library(ggplot2)

# Plot for "PrimaryRace"
ggplot(dataset_clean, aes(x = PrimaryRace, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Primary Race by Importance of Stopping Discrimination", x = "Primary Race", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "Orientation"
ggplot(dataset_clean, aes(x = Orientation, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Orientation by Importance of Stopping Discrimination", x = "Orientation", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "Gender"
ggplot(dataset_clean, aes(x = Gender, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Gender by Importance of Stopping Discrimination", x = "Gender", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "Age"
ggplot(dataset_clean, aes(x = Age, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Age by Importance of Stopping Discrimination", x = "Age Category", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "HighestLevelOfEducation"
ggplot(dataset_clean, aes(x = HighestLevelOfEducation, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Highest Level of Education by Importance of Stopping Discrimination", x = "Highest Level of Education", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "CommunityLivedIn"
ggplot(dataset_clean, aes(x = CommunityLivedIn, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Community Lived In by Importance of Stopping Discrimination", x = "Community Lived In", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "TreatedUnfairlyOrDiscriminatedAgainst"
ggplot(dataset_clean, aes(x = TreatedUnfairlyOrDiscriminatedAgainst, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Treated Unfairly by Importance of Stopping Discrimination", x = "Treated Unfairly", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "DiscriminationImpactOnLifeSatisfaction"
ggplot(dataset_clean, aes(x = DiscriminationImpactOnLifeSatisfaction, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Discrimination Impact on Life Satisfaction by Importance of Stopping Discrimination", x = "Impact on Life Satisfaction", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "PerceptionsOfDiscriminationAgainstWhites"
ggplot(dataset_clean, aes(x = PerceptionsOfDiscriminationAgainstWhites, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Perceptions of Discrimination Against Whites by Importance of Stopping Discrimination", x = "Discrimination Against Whites", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "PerceptionsOfDiscriminationAgainstBlacks"
ggplot(dataset_clean, aes(x = PerceptionsOfDiscriminationAgainstBlacks, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Perceptions of Discrimination Against Blacks by Importance of Stopping Discrimination", x = "Discrimination Against Blacks", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "PerceptionsOfDiscriminationAgainstAsianAmericans"
ggplot(dataset_clean, aes(x = PerceptionsOfDiscriminationAgainstAsianAmericans, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Perceptions of Discrimination Against Asian Americans by Importance of Stopping Discrimination", x = "Discrimination Against Asian Americans", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "PerceptionsOfDiscriminationAgainstNativeAmericans"
ggplot(dataset_clean, aes(x = PerceptionsOfDiscriminationAgainstNativeAmericans, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Perceptions of Discrimination Against Native Americans by Importance of Stopping Discrimination", x = "Discrimination Against Native Americans", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "PerceptionsOfDiscriminationAgainstImmigrants"
ggplot(dataset_clean, aes(x = PerceptionsOfDiscriminationAgainstImmigrants, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Perceptions of Discrimination Against Immigrants by Importance of Stopping Discrimination", x = "Discrimination Against Immigrants", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "PerceptionsOfDiscriminationAgainstLatinos"
ggplot(dataset_clean, aes(x = PerceptionsOfDiscriminationAgainstLatinos, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Perceptions of Discrimination Against Latinos by Importance of Stopping Discrimination", x = "Discrimination Against Latinos", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "PerceptionsOfDiscriminationAgainstGaysAndLesbians"
ggplot(dataset_clean, aes(x = PerceptionsOfDiscriminationAgainstGaysAndLesbians, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(
    title = "Perceptions of Discrimination Against Gays and Lesbians by Importance of Stopping Discrimination", 
    x = "Discrimination Against Gays and Lesbians", 
    y = "Proportion"
  ) +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Plot for "PerceptionsOfDiscriminationAgainstMuslims"
ggplot(dataset_clean, aes(x = PerceptionsOfDiscriminationAgainstMuslims, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(
    title = "Perceptions of Discrimination Against Muslims by Importance of Stopping Discrimination", 
    x = "Discrimination Against Muslims", 
    y = "Proportion"
  ) +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


# Plot for "Religion"
ggplot(dataset_clean, aes(x = Religion, fill = ImportanceOfStoppingDiscriminationAgainstMinorities)) +
  geom_bar(position = "fill") +
  labs(title = "Distribution of Religion by Importance of Stopping Discrimination", x = "Religion", y = "Proportion") +
  scale_fill_manual(values = c("lightblue", "salmon")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

# Interaction Terms Tests

```{r}
# Fit a logistic regression model
model <- glm(Q1R5 ~ S2_RACE_PRIME + # Primary Race
               S3 +                 # Orientation
               S3B +                # Gender
               S5_AGE +             # Age
               S13 +                # Highest level of education
               S14 +                # Community lived in
               Q627 +               # Treated unfairly or discriminated against
               Q633 +               # Discrimination impact on life satisfaction
               Q619_Q626R2 +        # Perceptions of discrimination against Blacks
               Q619_Q626R3 +        # Perceptions of discrimination against Asian Americans
               Q619_Q626R4 +        # Perceptions of discrimination against Native Americans
               Q619_Q626R5 +        # Perceptions of discrimination against Immigrants
               Q619_Q626R6 +        # Perceptions of discrimination against Latinos
               Religion +
               S3B * Q627,
             
            data = dataset_clean, family = binomial)

# summary(model)
```

##1.

```{r}
# Fit a logistic regression model with an interaction term
model_interaction <- glm(Q1R5 ~ S2_RACE_PRIME + # Primary Race
               S3 +                 # Orientation
               S3B +                # Gender
               S5_AGE +             # Age
               S13 +                # Highest level of education
               S14 +                # Community lived in
               Q627 +               # Treated unfairly or discriminated against
               Q633 +               # Discrimination impact on life satisfaction
               Q619_Q626R2 +        # Perceptions of discrimination against Blacks
               Q619_Q626R3 +        # Perceptions of discrimination against Asian Americans
               Q619_Q626R4 +        # Perceptions of discrimination against Native Americans
               Q619_Q626R5 +        # Perceptions of discrimination against Immigrants
               Q619_Q626R6 +        # Perceptions of discrimination against Latinos
               Religion +
               S3 * Q627,
             
            data = dataset_clean, family = binomial)

summary(model_interaction)

# Compare models
#AIC(model, model_interaction)
```