"Perceptions Of Discrimination Against Whites: A Little",
"Perceptions Of Discrimination Against Whites: None At All",
"Perceptions Of Discrimination Against Whites: Don't Know",
"Perceptions Of Discrimination Against Blacks: Some", # A lot
"Perceptions Of Discrimination Against Blacks: A Little",
"Perceptions Of Discrimination Against Blacks: None At All",
"Perceptions Of Discrimination Against Blacks: Don't Know",
"Perceptions Of Discrimination Against Asian Americans: Some", # A lot
"Perceptions Of Discrimination Against Asian Americans: A Little",
"Perceptions Of Discrimination Against Asian Americans: None At All",
"Perceptions Of Discrimination Against Asian Americans: Don't Know",
"Perceptions Of Discrimination Against Native Americans: Some", # A lot
"Perceptions Of Discrimination Against Native Americans: A Little",
"Perceptions Of Discrimination Against Native Americans: None At All",
"Perceptions Of Discrimination Against Native Americans: Don't Know",
"Perceptions Of Discrimination Against Immigrants: Some", # A lot
"Perceptions Of Discrimination Against Immigrants: A Little",
"Perceptions Of Discrimination Against Immigrants: None At All",
"Perceptions Of Discrimination Against Immigrants: Don't Know",
"Perceptions Of Discrimination Against Latinos: Some", # A lot
"Perceptions Of Discrimination Against Latinos: A Little",
"Perceptions Of Discrimination Against Latinos: None At All",
"Perceptions Of Discrimination Against Latinos: Don't Know",
"Perceptions Of Discrimination Against Gays And Lesbians: Some", # A lot
"Perceptions Of Discrimination Against Gays And Lesbians: A Little",
"Perceptions Of Discrimination Against Gays And Lesbians: None At All",
"Perceptions Of Discrimination Against Gays And Lesbians: Don't Know",
"Perceptions Of Discrimination Against Muslims: Some",# A lot
"Perceptions Of Discrimination Against Muslims: A Little",
"Perceptions Of Discrimination Against Muslims: None At All",
"Perceptions Of Discrimination Against Muslims: Don't Know",
"Education: Some College Experience", # No College Experience
"Education: College Graduate",
"Orientation: Queer", #Straight
"Orientation: Refused",
"Community Type: Urban/Suburban", # Rural
"Race: Black", # White
"Race: Asian American",
"Race: Latino",
"Race: AIAN",
"Race: NHPI",
"Race: Arab/MENA",
"Age: 30-39 Years", # 18-29
"Age: 40-49 Years",
"Age: 50-59 Years",
"Age: 60-69 Years",
"Age: 70+ Years"
)
# Add row names as a new column
analysis_table <- cbind(RowName = names, results_base_model)
# Render the table
table <- analysis_table |>
gt() |>
tab_header(
title = "Odds Ratios with Confidence Intervals and P-Values for base model"
) |>
cols_label(
RowName = "Description",  # Change the column header for the row names
OddsRatio = "Odds Ratio",
LowerCI = "Lower Confidence Interval",
UpperCI = "Upper Confidence Interval",
PValue = "P-Value"
) |>
fmt_number(
columns = c(OddsRatio, LowerCI, UpperCI),
decimals = 4
) |>
fmt_scientific(
columns = c(PValue),
decimals = 2  # Show p-values in scientific notation
)
# View the table
table
# Update the column names in the dataframe
colnames(analysis_table) <- c("Description", "Odds Ratio", "Lower Confidence Interval",
"Upper Confidence Interval", "P-Value")
# View analysis table
analysis_table
# View the updated dataframe
head(analysis_table)
## Figure 2:
# Filter for significant variables (p-value < 0.05)
significant_data <- analysis_table[analysis_table$`P-Value` < 0.05, ]
# Add a column for variable names to use in the plot (from the "Description" column)
significant_data <- significant_data |>
mutate(Variable = Description)
# Create the plot
ggplot(significant_data, aes(x = `Odds Ratio`, y = Variable)) +
geom_point(size = 4, color = "blue") +  # Add points for odds ratios
geom_errorbarh(aes(xmin = `Lower Confidence Interval`,
xmax = `Upper Confidence Interval`),
height = 0.3, color = "black") +  # Add horizontal error bars
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +  # Add a vertical reference line at Odds Ratio = 1
labs(
title = "Odds Ratio of Significant Variables",
x = "Odds Ratio",
y = "Variable"
) +
theme_minimal() +  # Use a minimal theme for better aesthetics
theme(
axis.text.y = element_text(size = 6, color = "black"),  # Improve y-axis text readability
axis.title.x = element_text(size = 12, face = "bold"),  # Highlight x-axis title
axis.title.y = element_text(size = 12, face = "bold"),  # Highlight y-axis title
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),  # Center the title
plot.margin = margin(1, 1, 1, 1, "cm"),  # Adjust margins
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Reduce x-axis text size
legend.text = element_text(size = 8),  # Reduce legend text size
legend.title = element_text(size = 9)  # Reduce legend title size
)
# Save the plot with larger dimensions
ggsave("Significant_Variables_Plot_Enhanced.png", width = 40, height = 20)
# Generating a prediction as binary values (0 or 1), where:
## 1 indicates a predicted probability greater than 0.5 (positive class, "Important").
## 0 indicates a predicted probability less than or equal to 0.5 (negative class, "Not important").
model_prediction <- ifelse(predict(base_model,
newdata = dataset_clean,
type = "response") > 0.5, 1, 0)
# Converting the predictions factors
## 0 Not important, 1 Important
model_prediction_factor <- factor(model_prediction,
levels = c(0, 1),
labels = c("Not important", "Important"))  # Adjusting labels
# Convert the response variable to a factor with matching levels
response_factor <- factor(dataset_clean$ImportanceOfStoppingDiscriminationAgainstMinorities,
levels = c("Not important", "Important"))  # Ensuring matching order
# Checking if factors are identical (you can uncomment this to check the levels)
# levels(model_prediction_factor)
# levels(response_factor)
# Generate confusion matrix (if needed)
confusionMatrix(table(model_prediction_factor, response_factor),
positive = "Important",
mode = "everything")
# Load necessary libraries
library(dplyr)   # Provides %>% and mutate
library(tidyverse)  # Optionally load the entire tidyverse if needed
library(pROC)
library(vcd)
library(car)
library(knitr)
library(gt)
library(caret)
# Read the dataset
file_path <- "39096-0001-Data.rda"
load(file_path)          # Load the RDA file
ls()                     # List objects loaded into the environment
dataset <- da39096.0001  # Access the dataset
head(dataset)
ncol(dataset)
nrow(dataset)
# Define the required columns
required_cols <- c(
# Outcome Variable: Stopping discrimination against racial/ethnic minorities
"Q1R5",
# Demographic Variables
"S2_RACE_PRIME",   # Primary Race
"S3",              # SexualOrientation
"S3B",             # Gender
"S5_AGE",          # Age categories
"S13",             # Highest level of education
"S14",             # Community lived in
# Variables capturing experiences with racism
"Q629R1",          # Unfair treatment due to racial background/ethnicity
"Q629R2",          # Unfair treatment due to skin color
"Q629R3",          # Unfair treatment due to gender
"Q629R4",          # Unfair treatment due to sexuality/orientation
"Q629R5",          # Unfair treatment due to immigration status
"Q629R6",          # Unfair treatment due to religion
"Q629R7",          # Unfair treatment due to accent
"Q627",            # Treated unfairly or discriminated against because of your race, ethnicity, gender, sexuality, being an immigrant, religious heritage or having an accent?
"Q633",            # Discrimination impact on life satisfaction
# Perceptions of discrimination
"Q619_Q626R1",     # Perceptions of discrimination against Whites
"Q619_Q626R2",     # Perceptions of discrimination against Blacks
"Q619_Q626R3",     # Perceptions of discrimination against Asian Americans
"Q619_Q626R4",     # Perceptions of discrimination against Native Americans
"Q619_Q626R5",     # Perceptions of discrimination against Immigrants
"Q619_Q626R6",     # Perceptions of discrimination against Latinos
"Q619_Q626R7",     # Perceptions of discrimination against GaysAndLesbians
"Q619_Q626R8"      # Perceptions of discrimination against Muslims
)
# Create a new dataframe with selected variables
dataset_new <- dataset[, required_cols]
# Recode the outcome variable 'Q1R5' for readability
dataset_new$Q1R5 <- factor(
ifelse(
dataset_new$Q1R5 == "(0) NO TO: Stopping discrimination against racial/ethnic minorities",
"Not important",
"Important"  # Remaining cases are "Important"
),
levels = c("Not important", "Important") # Define factor levels
)
# Define the columns for perceptions of discrimination
perception_cols <- c(
"Q619_Q626R1",  # Perceptions of discrimination against Whites
"Q619_Q626R2",  # Perceptions of discrimination against Blacks
"Q619_Q626R3",  # Perceptions of discrimination against Asian Americans
"Q619_Q626R4",  # Perceptions of discrimination against Native Americans
"Q619_Q626R5",  # Perceptions of discrimination against Immigrants
"Q619_Q626R6",  # Perceptions of discrimination against Latinos
"Q619_Q626R7",  # Perceptions of discrimination against GaysAndLesbians
"Q619_Q626R8",  # Perceptions of discrimination against Muslims
"Q633"          # Discrimination impact on life satisfaction
)
# Recode 'Don' as 'Don't know' and ensure columns remain factors
dataset_new[perception_cols] <- lapply(dataset_new[perception_cols], function(x) {
x <- as.character(x)  # Temporarily convert to character for recoding
x <- ifelse(x == "(5) Don", "(5) Don't know", x)  # Recode 'Don' to 'Don't know'
factor(x)  # Convert back to factor
})
# Define required columns to convert to factors (if not already defined)
# Assuming `required_cols` is previously defined; otherwise, specify explicitly
dataset_new[required_cols] <- lapply(dataset_new[required_cols], as.factor)
# Verify the structure of the dataset
str(dataset_new[required_cols])
# Display the first few rows to check the changes
head(dataset_new)
# Data Cleaning and Recoding for dataset_new
dataset_clean <- dataset_new |>
mutate(
# Education recoding
educ = case_when(
S13 == "(1) Grades 1-8" ~ "No college experience",
S13 == "(2) Some High School, but did not graduate" ~ "No college experience",
S13 == "(3) High School graduate or GED" ~ "No college experience",
S13 == "(4) Some college" ~ "Some college experience",
S13 == "(5) Associates, 2-year degree" ~ "College graduate",
S13 == "(6) Bachelors, 4-year degree" ~ "College graduate",
S13 == "(7) Post-graduate degree" ~ "College graduate"
),
# Sexual orientation recoding
sex_orientation = case_when(
S3 == "(01) Straight, that is, not gay or lesbian" ~ "Straight",
S3 == "(02) Gay or lesbian" ~ "Queer",
S3 == "(03) Bisexual" ~ "Queer",
S3 == "(04) Something else (Specify)" ~ "Queer",
S3 == "(88) Refused" ~ "Refused/Don't Know",
S3 == "(99) I don" ~ "Refused/Don't Know"
),
# Urban vs rural recoding
rural = case_when(
S14 == "(1) Large urban area" ~ "Urban/suburban",
S14 == "(2) Large suburb near large city" ~ "Urban/suburban",
S14 == "(3) Small suburb near small town or city" ~ "Urban/suburban",
S14 == "(4) Small town or small city" ~ "Urban/suburban",
S14 == "(5) Rural area" ~ "Rural"
),
# Race recoding
race_recoded = case_when(
S2_RACE_PRIME == "(1) White" ~ "White",
S2_RACE_PRIME == "(2) Hispanic or Latino" ~ "Latino",
S2_RACE_PRIME == "(3) Black or African American" ~ "Black",
S2_RACE_PRIME == "(4) Asian American" ~ "Asian American",
S2_RACE_PRIME == "(5) American Indian/Native American" ~ "AIAN",
S2_RACE_PRIME == "(6) Arab, Middle Eastern or North African" ~ "Arab/MENA",
S2_RACE_PRIME == "(7) Native Hawaiian" ~ "NHPI",
S2_RACE_PRIME == "(8) Not Hawaiian, but other Pacific Islander" ~ "NHPI"
),
# Age recoding
age_recoded = case_when(
S5_AGE == "(1) 16-17" ~ "16-17",
S5_AGE == "(2) 18-29" ~ "18-29",
S5_AGE == "(3) 30-39" ~ "30-39",
S5_AGE == "(4) 40-49" ~ "40-49",
S5_AGE == "(5) 50-59" ~ "50-59",
S5_AGE == "(6) 60-69" ~ "60-69",
S5_AGE == "(7) 70 +" ~ "70+"
)
) |>
mutate(
# Converting variables to factors
race_recoded = factor(race_recoded, levels = c("White", "Black", "Asian American", "Latino", "AIAN", "NHPI", "Arab/MENA")),
age_recoded = factor(age_recoded, levels = c("18-29", "30-39", "40-49", "50-59", "60-69", "70+")),
educ = factor(educ, levels = c("No college experience", "Some college experience", "College graduate")),
rural = factor(rural, levels = c("Rural", "Urban/suburban")),
sex_orientation = factor(sex_orientation, levels = c("Straight", "Queer", "Refused/Don't Know"))
)
# Take a look at the updated dataset
head(dataset_clean)
# Remove all redundant columns
redundant_columns <- c("Q629R1", "Q629R2", "Q629R3", "Q629R4",
"Q629R5", "Q629R6", "Q629R7",
"S2_RACE_PRIME", "S13", "S3", "S5_AGE","S14")
dataset_clean <- dataset_clean[, !(names(dataset_clean) %in% redundant_columns)]
# Rename remaining columns in dataset_clean
colnames(dataset_clean) <- c(
"ImportanceOfStoppingDiscriminationAgainstMinorities",  # Q1R5
"Gender",                                               # S3B
"TreatedUnfairlyOrDiscriminatedAgainst",                # Q627
"DiscriminationImpactOnLifeSatisfaction",              # Q633
"PerceptionsOfDiscriminationAgainstWhites",            # Q619_Q626R1
"PerceptionsOfDiscriminationAgainstBlacks",            # Q619_Q626R2
"PerceptionsOfDiscriminationAgainstAsianAmericans",    # Q619_Q626R3
"PerceptionsOfDiscriminationAgainstNativeAmericans",   # Q619_Q626R4
"PerceptionsOfDiscriminationAgainstImmigrants",        # Q619_Q626R5
"PerceptionsOfDiscriminationAgainstLatinos",           # Q619_Q626R6
"PerceptionsOfDiscriminationAgainstGaysAndLesbians",   # Q619_Q626R7
"PerceptionsOfDiscriminationAgainstMuslims",           # Q619_Q626R8
"Education",                                           # educ
"SexOrientation",                                      # sex_orientation
"Rural",                                               # rural
"Race",                                                # race_recoded
"Age"                                                  # age_recoded
)
# Regression model
base_model <- glm(ImportanceOfStoppingDiscriminationAgainstMinorities ~ Gender +
TreatedUnfairlyOrDiscriminatedAgainst +
DiscriminationImpactOnLifeSatisfaction +
PerceptionsOfDiscriminationAgainstWhites +
PerceptionsOfDiscriminationAgainstBlacks +
PerceptionsOfDiscriminationAgainstAsianAmericans +
PerceptionsOfDiscriminationAgainstNativeAmericans +
PerceptionsOfDiscriminationAgainstImmigrants +
PerceptionsOfDiscriminationAgainstLatinos +
PerceptionsOfDiscriminationAgainstGaysAndLesbians +
PerceptionsOfDiscriminationAgainstMuslims +
Education +
SexOrientation +
Rural +
Race +
Age,
data = dataset_clean, family = "binomial")
interaction_model <- glm(ImportanceOfStoppingDiscriminationAgainstMinorities ~
TreatedUnfairlyOrDiscriminatedAgainst +
DiscriminationImpactOnLifeSatisfaction +
PerceptionsOfDiscriminationAgainstWhites +
PerceptionsOfDiscriminationAgainstBlacks +
PerceptionsOfDiscriminationAgainstAsianAmericans +
PerceptionsOfDiscriminationAgainstNativeAmericans +
PerceptionsOfDiscriminationAgainstImmigrants +
PerceptionsOfDiscriminationAgainstLatinos +
PerceptionsOfDiscriminationAgainstGaysAndLesbians +
PerceptionsOfDiscriminationAgainstMuslims +
Education +
SexOrientation +
Rural +
Age +
Gender * Race,
data = dataset_clean, family = "binomial")
# Check multicollinearity using VIF
vif_base <- vif(base_model)
vif_interaction <- vif(interaction_model)
anova(base_model, interaction_model, test="Chisq")
# Extract odds ratios
odds_ratios <- exp(coef(base_model))
# Get confidence intervals for coefficients
conf_intervals <- exp(confint(base_model))
# Extract p-values
p_values <- summary(base_model)$coefficients[, 4]
# Combine everything into a single data frame
results_base_model <- data.frame(
OddsRatio = odds_ratios,
LowerCI = conf_intervals[, 1],
UpperCI = conf_intervals[, 2],
PValue = p_values
)
# Display results
results_base_model
# Verify the structure of the dataset
str(dataset_clean)
names <- c("Intercept",
"Gender: Women",
"Gender: Non-Binary",
"Gender: Something Else",
"Treated Unfairly Or Discriminated Against: No", # Yes
"Discrimination Impact On Life Satisfaction: Some", # A lot
"Discrimination Impact On Life Satisfaction: A Little",
"Discrimination Impact On Life Satisfaction: Not At All",
"Discrimination Impact On Life Satisfaction: Don't Know",
"Discrimination Impact On Life Satisfaction: Refused",
"Perceptions Of Discrimination Against Whites: Some", # A lot
"Perceptions Of Discrimination Against Whites: A Little",
"Perceptions Of Discrimination Against Whites: None At All",
"Perceptions Of Discrimination Against Whites: Don't Know",
"Perceptions Of Discrimination Against Blacks: Some", # A lot
"Perceptions Of Discrimination Against Blacks: A Little",
"Perceptions Of Discrimination Against Blacks: None At All",
"Perceptions Of Discrimination Against Blacks: Don't Know",
"Perceptions Of Discrimination Against Asian Americans: Some", # A lot
"Perceptions Of Discrimination Against Asian Americans: A Little",
"Perceptions Of Discrimination Against Asian Americans: None At All",
"Perceptions Of Discrimination Against Asian Americans: Don't Know",
"Perceptions Of Discrimination Against Native Americans: Some", # A lot
"Perceptions Of Discrimination Against Native Americans: A Little",
"Perceptions Of Discrimination Against Native Americans: None At All",
"Perceptions Of Discrimination Against Native Americans: Don't Know",
"Perceptions Of Discrimination Against Immigrants: Some", # A lot
"Perceptions Of Discrimination Against Immigrants: A Little",
"Perceptions Of Discrimination Against Immigrants: None At All",
"Perceptions Of Discrimination Against Immigrants: Don't Know",
"Perceptions Of Discrimination Against Latinos: Some", # A lot
"Perceptions Of Discrimination Against Latinos: A Little",
"Perceptions Of Discrimination Against Latinos: None At All",
"Perceptions Of Discrimination Against Latinos: Don't Know",
"Perceptions Of Discrimination Against Gays And Lesbians: Some", # A lot
"Perceptions Of Discrimination Against Gays And Lesbians: A Little",
"Perceptions Of Discrimination Against Gays And Lesbians: None At All",
"Perceptions Of Discrimination Against Gays And Lesbians: Don't Know",
"Perceptions Of Discrimination Against Muslims: Some",# A lot
"Perceptions Of Discrimination Against Muslims: A Little",
"Perceptions Of Discrimination Against Muslims: None At All",
"Perceptions Of Discrimination Against Muslims: Don't Know",
"Education: Some College Experience", # No College Experience
"Education: College Graduate",
"Orientation: Queer", #Straight
"Orientation: Refused",
"Community Type: Urban/Suburban", # Rural
"Race: Black", # White
"Race: Asian American",
"Race: Latino",
"Race: AIAN",
"Race: NHPI",
"Race: Arab/MENA",
"Age: 30-39 Years", # 18-29
"Age: 40-49 Years",
"Age: 50-59 Years",
"Age: 60-69 Years",
"Age: 70+ Years"
)
# Add row names as a new column
analysis_table <- cbind(RowName = names, results_base_model)
# Render the table
table <- analysis_table |>
gt() |>
tab_header(
title = "Odds Ratios with Confidence Intervals and P-Values for base model"
) |>
cols_label(
RowName = "Description",  # Change the column header for the row names
OddsRatio = "Odds Ratio",
LowerCI = "Lower Confidence Interval",
UpperCI = "Upper Confidence Interval",
PValue = "P-Value"
) |>
fmt_number(
columns = c(OddsRatio, LowerCI, UpperCI),
decimals = 4
) |>
fmt_scientific(
columns = c(PValue),
decimals = 2  # Show p-values in scientific notation
)
# View the table
table
# Update the column names in the dataframe
colnames(analysis_table) <- c("Description", "Odds Ratio", "Lower Confidence Interval",
"Upper Confidence Interval", "P-Value")
# View analysis table
analysis_table
# View the updated dataframe
head(analysis_table)
## Figure 2:
# Filter for significant variables (p-value < 0.05)
significant_data <- analysis_table[analysis_table$`P-Value` < 0.05, ]
# Add a column for variable names to use in the plot (from the "Description" column)
significant_data <- significant_data |>
mutate(Variable = Description)
# Create the plot
ggplot(significant_data, aes(x = `Odds Ratio`, y = Variable)) +
geom_point(size = 4, color = "blue") +  # Add points for odds ratios
geom_errorbarh(aes(xmin = `Lower Confidence Interval`,
xmax = `Upper Confidence Interval`),
height = 0.3, color = "black") +  # Add horizontal error bars
geom_vline(xintercept = 1, linetype = "dashed", color = "red", size = 0.7) +  # Add a vertical reference line at Odds Ratio = 1
labs(
title = "Odds Ratio of Significant Variables",
x = "Odds Ratio",
y = "Variable"
) +
theme_minimal() +  # Use a minimal theme for better aesthetics
theme(
axis.text.y = element_text(size = 6, color = "black"),  # Improve y-axis text readability
axis.title.x = element_text(size = 12, face = "bold"),  # Highlight x-axis title
axis.title.y = element_text(size = 12, face = "bold"),  # Highlight y-axis title
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),  # Center the title
plot.margin = margin(1, 1, 1, 1, "cm"),  # Adjust margins
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Reduce x-axis text size
legend.text = element_text(size = 8),  # Reduce legend text size
legend.title = element_text(size = 9)  # Reduce legend title size
)
# Save the plot with larger dimensions
ggsave("Significant_Variables_Plot_Enhanced.png", width = 40, height = 20)
# Generating a prediction as binary values (0 or 1), where:
## 1 indicates a predicted probability greater than 0.5 (positive class, "Important").
## 0 indicates a predicted probability less than or equal to 0.5 (negative class, "Not important").
model_prediction <- ifelse(predict(base_model,
newdata = dataset_clean,
type = "response") > 0.5, 1, 0)
# Converting the predictions factors
## 0 Not important, 1 Important
model_prediction_factor <- factor(model_prediction,
levels = c(0, 1),
labels = c("Not important", "Important"))  # Adjusting labels
# Convert the response variable to a factor with matching levels
response_factor <- factor(dataset_clean$ImportanceOfStoppingDiscriminationAgainstMinorities,
levels = c("Not important", "Important"))  # Ensuring matching order
# Checking if factors are identical (you can uncomment this to check the levels)
# levels(model_prediction_factor)
# levels(response_factor)
# Generate confusion matrix (if needed)
confusionMatrix(table(model_prediction_factor, response_factor),
positive = "Important",
mode = "everything")
# Generate predicted probabilities (not just binary predictions) from the model
model_probabilities <- predict(base_model, newdata = dataset_clean, type = "response")
# Calculate ROC curve
roc_curve <- roc(response_factor, model_probabilities)
# Calculate AUC (Area Under the Curve)
auc_value <- auc(roc_curve)
print(paste("AUC: ", auc_value))
# Plot ROC curve
plot(roc_curve, main = "ROC Curve", col = "blue", lwd = 2)
legend("bottomright", legend = paste("AUC =", round(auc_value, 3)), col = "blue", lwd = 2)
