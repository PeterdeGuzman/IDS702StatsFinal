---
title: "peter_models"
format: html
author: "Peter de Guzman"
editor: visual
---

## 

# Loading Packages

```{r}
library(tidyverse)
library(ordinal)
library(car)
library(brant)
library(MASS)
```

# Loading data

```{r}
load("/Users/pdeguz01/Documents/git/Data/2020 CMPS/Output/2020cmps_clean.RData")
```

# Running chi-square tests

```{r}
# # Create a summary table for all categorical variables
# variables <- c("Q29", "Q271", "S2_RACE_PRIME", "S3", "S3B", "S5_AGE", "S13", "S14", "S7", "Q21", "S2_M", "Q627", "Q628", "Q629R1", "Religion", "educ", "sex_orientation", "rural", "white", "race_recoded", "age_recoded")
# 
# 
# # Chi-square tests for each variable
# chi_square_results <- lapply(variables, function(var) {
#   chisq.test(table(dataset_clean[[var]], dataset_clean$Q29))
# })
# 
# # Print chi-square results
# names(chi_square_results) <- variables
# print(chi_square_results)
```

| Variable | Chi-Sq Test Statistic | Degrees of Freedom (df) | p-value |
|----|----|----|----|
| Q271 | 291.49 | 12 | \< 2.2e-16 |
| S2_RACE_PRIME | 291.12 | 21 | \< 2.2e-16 |
| S3 | 101.7 | 15 | 6.196e-15 |
| S3B | 296.35 | 9 | \< 2.2e-16 |
| S5_AGE | NaN | 18 | NA |
| S13 | 710.69 | 18 | \< 2.2e-16 |
| S14 | 196.79 | 12 | \< 2.2e-16 |
| S7 | 148.62 | 6 | \< 2.2e-16 |
| Q21 | 1284.1 | 9 | \< 2.2e-16 |
| S2_M | 6.0327 | 3 | 0.11 |
| Q627 | 246.82 | 3 | \< 2.2e-16 |
| Q628 | 9.0318 | 6 | 0.1718 |
| Q629R1 | 6.9533 | 3 | 0.0734 |
| Religion | 562.39 | 45 | \< 2.2e-16 |
| educ | 608.65 | 6 | \< 2.2e-16 |
| sex_orientation | 55.679 | 6 | 3.379e-10 |
| rural/urban&suburban | 83.719 | 3 | \< 2.2e-16 |
| white/non-white | 75.137 | 3 | 3.386e-16 |
| race_recoded | 276.36 | 18 | \< 2.2e-16 |
| age_recoded | 396.97 | 15 | \< 2.2e-16 |

## Takeaways from Chi-Square Test

Our outcome variable is Q29 (interest in politics).

There appears to be a significant relationship between the following variables and Q29 (interest in politics):

-   Age (Recoded)

-   Race (Recoded)

-   Gender

-   White or Non-White status

-   Rural or Urban & Suburban status

-   Sexual Orientation

-   Religion

-   Educational Attainment

-   Having experienced prior discrimination (Q627)

-   Political Party ID

-   Nativity (born in US or other)

# Prop Tables

```{r}
library(janitor)
tabyl(dataset_clean$Q29)
tabyl(dataset_clean$Q271)

```

# Fitting OLR Model Using polr()

```{r}
library(MASS) # package for model
library(caret) # package for confusion matrix

dataset_clean$Q29_reordered  <- factor(dataset_clean$Q29,
                            levels = c("(4) Not at all interested in politics",
                                     "(3) Not that interested in politics",
                                     "(2) Somewhat interested",
                                     "(1) Very interested in politics"))


dataset_clean$Q271_reordered <- factor(dataset_clean$Q271,
                            levels = c("(5) Not at all important",
                                     "(4) Slightly important",
                                     "(3) Moderately important",
                                     "(2) Very important",
                                     "(1) Extremely important"))

ord_mod <- polr(Q29 ~ Q271_reordered + race_recoded +
                  age_recoded +
            educ +  # Educational Attainment
            S3B + # Gender
            Q21, # Party affiliation
          data = dataset_clean, Hess=TRUE)

summary(ord_mod)


pvals <- pnorm(-abs(summary(ord_mod)$coef[,"t value"]))*2
ctable <- cbind(summary(ord_mod)$coef,pvals)

ctable

(exp_coefs <- exp(cbind(OR=coef(ord_mod),confint(ord_mod))))

head(ord_mod$fitted.values)
head(predict(ord_mod))

confusionMatrix(predict(ord_mod), dataset_clean$Q29, mode="everything")

```

```{r}
# generate new dataset to create predictions for the models
# 
new_dataset <- data.frame(race_recoded=c("White", "Black", "Asian American", "Latino", "AIAN", "NHPI", "Arab/MENA"),
                          Q271_reordered=c("(5) Not at all important", "(4) Slightly important", "(3) Moderately important", "(2) Very important", "(1) Extremely important", "(4) Slightly important", "(5) Not at all important"),
                          age_recoded = c("18-29", "30-39", "40-49", "50-59", "60-69", "70+", "18-29"),
                          S3B = c("(1) Man", "(2) Woman","(3) Non-binary","(4) Something else (Specify)", "(1) Man", "(2) Woman", "(1) Man"),
                          educ = c("No college experience", "Some college experience", "College graduate", "No college experience", "Some college experience", "College graduate", "College graduate"),
                          Q21 = c("(1) Republican",  "(2) Democrat","(3) Independent", "(4) Other party", "(1) Republican",  "(2) Democrat",  "(3) Independent"))


```

# Fitting OLR with interaction terms

```{r}
library(MASS) # package for model
library(caret) # package for confusion matrix

dataset_clean$Q271_reordered <- factor(dataset_clean$Q271,
                            levels = c("(5) Not at all important",
                                     "(4) Slightly important",
                                     "(3) Moderately important",
                                     "(2) Very important",
                                     "(1) Extremely important"))

ord_mod_interactions <- polr(Q29 ~ Q271_reordered * S3B +
                               race_recoded +
                  age_recoded +
            educ +  # Educational Attainment
            Q21, # Party affiliation
          data = dataset_clean, Hess=TRUE)



summary(ord_mod_interactions)


pvals_interact <- pnorm(-abs(summary(ord_mod_interactions)$coef[,"t value"]))*2
ctable_interact <- cbind(summary(ord_mod_interactions)$coef,pvals)

ctable_interact

(exp_coefs_interact <- exp(cbind(OR=coef(ord_mod_interactions),confint(ord_mod_interactions))))

head(ord_mod_interactions$fitted.values)
head(predict(ord_mod_interactions))

confusionMatrix(predict(ord_mod_interactions), dataset_clean$Q29, mode="everything")

```

# Testing proportional odds assumption with Brant test

```{r}
library(brant)
brant(ord_mod_interactions)
```

# Summary Table - OLR with Interactions

| Variable | Odds Ratio | 2.5% (Confidence Interval) | 97.5% (Confidence Interval) |
|------------------|------------------|------------------|------------------|
| Q271 (4) Slightly important | 1.0338781 | 0.86761871 | 1.2317529 |
| Q271 (3) Moderately important | 1.0228231 | 0.88466618 | 1.1826555 |
| Q271 (2) Very important | 0.8366761 | 0.72314779 | 0.9680337 |
| Q271 (1) Extremely important | 0.6069588 | 0.52449164 | 0.7024084 |
| S3B(2) Woman | 1.5887610 | 1.36312914 | 1.8518245 |
| S3B(3) Non-binary | 0.5380781 | 0.28888679 | 0.9978406 |
| S3B(4) Something else (Specify) | 0.4648621 | 0.07401426 | 2.6422344 |
| race Black | 1.1525119 | 1.04988995 | 1.2652177 |
| race Asian American | 1.6819184 | 1.53325820 | 1.8451528 |
| race Latino | 1.2583888 | 1.14546256 | 1.3825307 |
| race AIAN | 1.4882734 | 1.27404185 | 1.7384045 |
| race NHPI | 1.7838764 | 1.45756175 | 2.1825886 |
| race Arab/MENA | 0.8628526 | 0.66889425 | 1.1122887 |
| age 30-39 | 0.9698580 | 0.89048308 | 1.0563119 |
| age 40-49 | 1.0813779 | 0.98549367 | 1.1865407 |
| age 50-59 | 0.9107924 | 0.82952560 | 0.9996833 |
| age 60-69 | 0.7553567 | 0.68762045 | 0.8297158 |
| age 70+ | 0.5918432 | 0.52889988 | 0.6621363 |
| educSome college experience | 0.6551005 | 0.60189454 | 0.7129797 |
| educCollege graduate | 0.4476726 | 0.41528212 | 0.4825867 |
| Q21(2) Democrat | 0.8823547 | 0.81416780 | 0.9562372 |
| Q21(3) Independent | 1.7222132 | 1.58330889 | 1.8733830 |
| Q21(4) Other party | 4.7003458 | 4.03685844 | 5.4748427 |
| Q271 4) Slightly important:S3B(2) Woman | 1.0044380 | 0.78966197 | 1.2778491 |
| Q271 (3) Moderately important:S3B(2) Woman | 1.0569625 | 0.87144637 | 1.2819704 |
| Q271 (2) Very important:S3B(2) Woman | 1.0212671 | 0.84557349 | 1.2335590 |
| Q271 (1) Extremely important:S3B(2) Woman | 1.2324558 | 1.02421823 | 1.4830676 |
| Q271 (4) Slightly important:S3B(3) Non-binary | 1.5393710 | 0.46529911 | 5.0344630 |
| Q271 (3) Moderately important:S3B(3) Non-binary | 1.5246008 | 0.57882727 | 4.0084234 |
| Q271 (2) Very important:S3B(3) Non-binary | 1.9464262 | 0.77448045 | 4.8746428 |
| Q271 (1) Extremely important:S3B(3) Non-binary | 1.1408623 | 0.45797295 | 2.8216144 |
| Q271 (4) Slightly important:S3B(4) Something else (Specify) | 4.4125437 | 0.49596064 | 41.9119559 |
| Q271 (3) Moderately important:S3B(4) Something else (Specify) | 0.5879278 | 0.05055911 | 4.9095993 |
| Q271 2) Very important:S3B(4) Something else (Specify) | 9.6145175 | 0.70357378 | 160.9916657 |
| Q271 1) Extremely important:S3B(4) Something else (Specify) | 1.5327973 | 0.20059858 | 12.5345043 |

# Producing odds ratio plot for ordinal model with interactions

# Fitting MLR Model

```{r}

# Load packages
library(nnet)  # for multinomial logistic regression
library(tidyverse)
library(car)
library(effects)


# ensure outcome variable is a factor but not ordered
dataset_clean$Q29_unordered <- factor(dataset_clean$Q29, ordered = FALSE)
dataset_clean$Q271_simple <- as.numeric(dataset_clean$Q271)

# Fit multinomial model
m_mult <- multinom(Q29_unordered ~ Q271 * S3B + 
                     race_recoded + 
                     age_recoded +
            educ + # Educational Attainment
            Q21, # Party affiliation
          data = dataset_clean)



# Calculate predicted probabilities of marginal effects
# Create sequence of Q271_simple values
x_vals <- seq(min(dataset_clean$Q271_simple), max(dataset_clean$Q271_simple), length.out = 100)

# Function to calculate average predicted probabilities
get_avg_probs <- function(model, newdata, var_name) {
    preds <- predict(model, newdata = newdata, type = "probs")
    colMeans(preds)
}

# Calculate marginal effects by race
races <- unique(dataset_clean$race_recoded)
marg_effects <- list()
# 
for(race in races) {
    probs <- matrix(0, nrow = length(x_vals), ncol = length(levels(dataset_clean$Q29_unordered)))
    for(i in seq_along(x_vals)) {
        temp_data <- dataset_clean
        temp_data$Q271_simple <- x_vals[i]
        temp_data$race_major <- race
        probs[i,] <- get_avg_probs(m_mult, temp_data, "Q271_simple")
    }
    marg_effects[[race]] <- data.frame(
        x = x_vals,
        race = race,
        prob1 = probs[,1],
        prob2 = probs[,2],
        prob3 = probs[,3],
        prob4 = probs[,4]
    )
}

# Combine all marginal effects
marg_effects_df <- bind_rows(marg_effects)

# Create plots for marginal effects
# Reshape data for plotting
marg_effects_long <- marg_effects_df %>%
    pivot_longer(cols = starts_with("prob"),
                names_to = "outcome",
                values_to = "probability") %>%
    mutate(outcome = factor(outcome,
                          levels = paste0("prob", 1:4),
                          labels = levels(dataset_clean$Q29_unordered)))

# Plot marginal effects
p1 <- ggplot(marg_effects_long,
             aes(x = x, y = probability, color = outcome)) +
    geom_line() +
    facet_wrap(~race) +
    theme_minimal() +
    labs(title = "Marginal Effects of Racial Identity Importance by Race",
         x = "Importance of Racial Identity",
         y = "Predicted Probability",
         color = "Political Interest Level") +
    theme(legend.position = "bottom")
print(p1)

# Model fit statistics and comparisons
print("Model summaries:")
print(summary(m_mult))

# Calculate McFadden's R-squared
null_model <- multinom(Q29_unordered ~ 1, data = dataset_clean)
mcfadden_r2 <- 1 - logLik(m_mult)/logLik(null_model)

print("McFadden's R-squared:")
print(mcfadden_r2)

# Classification accuracy
pred_class <- predict(m_mult)
conf_matrix <- table(pred_class, dataset_clean$Q29_unordered)
accuracy <- sum(diag(conf_matrix))/sum(conf_matrix)

print("Classification accuracy:")
print(accuracy)
print("Confusion Matrix:")
print(conf_matrix)
# 
# Print AIC
print(AIC(m_mult))

# Calculate predicted probabilities
pred_data <- expand.grid(
    Q271 = unique(dataset_clean$Q271),
    age_recoded = unique(dataset_clean$age_recoded),
    race_recoded = unique(dataset_clean$race_recoded),
    educ = unique(dataset_clean$educ),
    S3B = unique(dataset_clean$S3B),
    Q21 = unique(dataset_clean$Q21)
)
# 
# Get predictions
preds <- predict(m_mult, newdata = pred_data, type = "probs")
pred_data <- cbind(pred_data, as.data.frame(preds))

# Create separate plots for each outcome level
pred_long <- pred_data %>%
    pivot_longer(cols = starts_with("("),
                names_to = "interest_level",
                values_to = "probability")


# Plot for each outcome level
p2 <- ggplot(pred_long,
             aes(x = Q271, y = probability, color = race_recoded)) +
    geom_line() +
    facet_wrap(~interest_level) +
    theme_minimal() +
    labs(title = "Predicted Probabilities by Outcome Level",
         x = "Importance of Racial Identity",
         y = "Probability",
         color = "Race/Ethnicity") +
    theme(legend.position = "bottom")
print(p2)


```

## Interpretation

```{r}
# generate predictions for the ordinal model and the ordinal model  with interactions
predict(ord_mod, new_dataset, type="probs")
predict(ord_mod_interactions, new_dataset, type="probs")


new_dataset <- data.frame(race_recoded=c("White", "Black", "Asian American", "Latino", "AIAN", "NHPI", "Arab/MENA"),
                          Q271=c("(5) Not at all important", "(4) Slightly important", "(3) Moderately important", "(2) Very important", "(1) Extremely important", "(4) Slightly important", "(5) Not at all important"),
                          age_recoded = c("18-29", "30-39", "40-49", "50-59", "60-69", "70+", "18-29"),
                          S3B = c("(1) Man", "(2) Woman","(3) Non-binary","(4) Something else (Specify)", "(1) Man", "(2) Woman", "(1) Man"),
                          educ = c("No college experience", "Some college experience", "College graduate", "No college experience", "Some college experience", "College graduate", "College graduate"),
                          Q21 = c("(1) Republican",  "(2) Democrat","(3) Independent", "(4) Other party", "(1) Republican",  "(2) Democrat",  "(3) Independent"))


predict(m_mult, new_dataset, type = "probs")
```

# Comparing confusion matrix

```{r}
# Confusion matrix for ordinal model with interactions
confusionMatrix(predict(ord_mod_interactions), dataset_clean$Q29, mode="everything")

# Confusion matrix for multinomial model
conf_matrix
```
